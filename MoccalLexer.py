# Generated from Moccal.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,72,481,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,3,3,3,163,8,3,1,4,1,4,1,4,1,4,5,4,169,8,4,10,4,12,4,
        172,9,4,1,4,1,4,1,5,1,5,1,5,1,5,5,5,180,8,5,10,5,12,5,183,9,5,1,
        5,1,5,1,5,1,5,1,5,1,6,5,6,191,8,6,10,6,12,6,194,9,6,1,6,1,6,4,6,
        198,8,6,11,6,12,6,199,1,7,4,7,203,8,7,11,7,12,7,204,1,8,1,8,5,8,
        209,8,8,10,8,12,8,212,9,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,
        1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,
        1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,
        1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,
        1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,
        1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,
        1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,
        1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,
        1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
        1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
        1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,
        1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
        1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,
        1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,
        1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,68,1,68,
        1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,
        1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
        1,73,1,73,1,73,3,73,460,8,73,1,73,1,73,5,73,464,8,73,10,73,12,73,
        467,9,73,1,74,1,74,1,74,1,74,1,75,3,75,474,8,75,1,75,1,75,4,75,478,
        8,75,11,75,12,75,479,2,181,210,0,76,1,0,3,0,5,0,7,0,9,1,11,2,13,
        3,15,4,17,5,19,6,21,7,23,8,25,9,27,10,29,11,31,12,33,13,35,14,37,
        15,39,16,41,17,43,18,45,19,47,20,49,21,51,22,53,23,55,24,57,25,59,
        26,61,27,63,28,65,29,67,30,69,31,71,32,73,33,75,34,77,35,79,36,81,
        37,83,38,85,39,87,40,89,41,91,42,93,43,95,44,97,45,99,46,101,47,
        103,48,105,49,107,50,109,51,111,52,113,53,115,54,117,55,119,56,121,
        57,123,58,125,59,127,60,129,61,131,62,133,63,135,64,137,65,139,66,
        141,67,143,68,145,69,147,70,149,71,151,72,1,0,5,1,0,65,90,1,0,97,
        122,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,491,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
        1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
        129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,
        0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,
        1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,1,153,1,0,0,0,3,155,1,0,0,0,
        5,157,1,0,0,0,7,162,1,0,0,0,9,164,1,0,0,0,11,175,1,0,0,0,13,192,
        1,0,0,0,15,202,1,0,0,0,17,206,1,0,0,0,19,215,1,0,0,0,21,218,1,0,
        0,0,23,221,1,0,0,0,25,224,1,0,0,0,27,227,1,0,0,0,29,230,1,0,0,0,
        31,233,1,0,0,0,33,236,1,0,0,0,35,239,1,0,0,0,37,242,1,0,0,0,39,245,
        1,0,0,0,41,248,1,0,0,0,43,251,1,0,0,0,45,253,1,0,0,0,47,255,1,0,
        0,0,49,259,1,0,0,0,51,262,1,0,0,0,53,266,1,0,0,0,55,268,1,0,0,0,
        57,270,1,0,0,0,59,272,1,0,0,0,61,274,1,0,0,0,63,276,1,0,0,0,65,278,
        1,0,0,0,67,280,1,0,0,0,69,282,1,0,0,0,71,284,1,0,0,0,73,286,1,0,
        0,0,75,288,1,0,0,0,77,290,1,0,0,0,79,292,1,0,0,0,81,294,1,0,0,0,
        83,296,1,0,0,0,85,298,1,0,0,0,87,300,1,0,0,0,89,302,1,0,0,0,91,304,
        1,0,0,0,93,306,1,0,0,0,95,308,1,0,0,0,97,310,1,0,0,0,99,312,1,0,
        0,0,101,316,1,0,0,0,103,321,1,0,0,0,105,327,1,0,0,0,107,334,1,0,
        0,0,109,342,1,0,0,0,111,352,1,0,0,0,113,361,1,0,0,0,115,365,1,0,
        0,0,117,371,1,0,0,0,119,378,1,0,0,0,121,386,1,0,0,0,123,389,1,0,
        0,0,125,394,1,0,0,0,127,399,1,0,0,0,129,408,1,0,0,0,131,414,1,0,
        0,0,133,421,1,0,0,0,135,424,1,0,0,0,137,428,1,0,0,0,139,431,1,0,
        0,0,141,435,1,0,0,0,143,441,1,0,0,0,145,448,1,0,0,0,147,459,1,0,
        0,0,149,468,1,0,0,0,151,477,1,0,0,0,153,154,7,0,0,0,154,2,1,0,0,
        0,155,156,7,1,0,0,156,4,1,0,0,0,157,158,7,2,0,0,158,6,1,0,0,0,159,
        163,3,1,0,0,160,163,3,3,1,0,161,163,3,5,2,0,162,159,1,0,0,0,162,
        160,1,0,0,0,162,161,1,0,0,0,163,8,1,0,0,0,164,165,5,47,0,0,165,166,
        5,47,0,0,166,170,1,0,0,0,167,169,8,3,0,0,168,167,1,0,0,0,169,172,
        1,0,0,0,170,168,1,0,0,0,170,171,1,0,0,0,171,173,1,0,0,0,172,170,
        1,0,0,0,173,174,6,4,0,0,174,10,1,0,0,0,175,176,5,47,0,0,176,177,
        5,42,0,0,177,181,1,0,0,0,178,180,9,0,0,0,179,178,1,0,0,0,180,183,
        1,0,0,0,181,182,1,0,0,0,181,179,1,0,0,0,182,184,1,0,0,0,183,181,
        1,0,0,0,184,185,5,42,0,0,185,186,5,47,0,0,186,187,1,0,0,0,187,188,
        6,5,0,0,188,12,1,0,0,0,189,191,3,5,2,0,190,189,1,0,0,0,191,194,1,
        0,0,0,192,190,1,0,0,0,192,193,1,0,0,0,193,195,1,0,0,0,194,192,1,
        0,0,0,195,197,3,45,22,0,196,198,3,5,2,0,197,196,1,0,0,0,198,199,
        1,0,0,0,199,197,1,0,0,0,199,200,1,0,0,0,200,14,1,0,0,0,201,203,3,
        5,2,0,202,201,1,0,0,0,203,204,1,0,0,0,204,202,1,0,0,0,204,205,1,
        0,0,0,205,16,1,0,0,0,206,210,5,34,0,0,207,209,9,0,0,0,208,207,1,
        0,0,0,209,212,1,0,0,0,210,211,1,0,0,0,210,208,1,0,0,0,211,213,1,
        0,0,0,212,210,1,0,0,0,213,214,5,34,0,0,214,18,1,0,0,0,215,216,5,
        61,0,0,216,217,5,61,0,0,217,20,1,0,0,0,218,219,5,60,0,0,219,220,
        5,61,0,0,220,22,1,0,0,0,221,222,5,62,0,0,222,223,5,61,0,0,223,24,
        1,0,0,0,224,225,5,33,0,0,225,226,5,61,0,0,226,26,1,0,0,0,227,228,
        5,94,0,0,228,229,5,61,0,0,229,28,1,0,0,0,230,231,5,38,0,0,231,232,
        5,61,0,0,232,30,1,0,0,0,233,234,5,124,0,0,234,235,5,61,0,0,235,32,
        1,0,0,0,236,237,5,42,0,0,237,238,5,61,0,0,238,34,1,0,0,0,239,240,
        5,45,0,0,240,241,5,61,0,0,241,36,1,0,0,0,242,243,5,43,0,0,243,244,
        5,61,0,0,244,38,1,0,0,0,245,246,5,47,0,0,246,247,5,61,0,0,247,40,
        1,0,0,0,248,249,5,37,0,0,249,250,5,61,0,0,250,42,1,0,0,0,251,252,
        5,44,0,0,252,44,1,0,0,0,253,254,5,46,0,0,254,46,1,0,0,0,255,256,
        5,97,0,0,256,257,5,110,0,0,257,258,5,100,0,0,258,48,1,0,0,0,259,
        260,5,111,0,0,260,261,5,114,0,0,261,50,1,0,0,0,262,263,5,110,0,0,
        263,264,5,111,0,0,264,265,5,116,0,0,265,52,1,0,0,0,266,267,5,126,
        0,0,267,54,1,0,0,0,268,269,5,37,0,0,269,56,1,0,0,0,270,271,5,94,
        0,0,271,58,1,0,0,0,272,273,5,38,0,0,273,60,1,0,0,0,274,275,5,124,
        0,0,275,62,1,0,0,0,276,277,5,61,0,0,277,64,1,0,0,0,278,279,5,42,
        0,0,279,66,1,0,0,0,280,281,5,43,0,0,281,68,1,0,0,0,282,283,5,47,
        0,0,283,70,1,0,0,0,284,285,5,33,0,0,285,72,1,0,0,0,286,287,5,60,
        0,0,287,74,1,0,0,0,288,289,5,62,0,0,289,76,1,0,0,0,290,291,5,45,
        0,0,291,78,1,0,0,0,292,293,5,35,0,0,293,80,1,0,0,0,294,295,5,40,
        0,0,295,82,1,0,0,0,296,297,5,41,0,0,297,84,1,0,0,0,298,299,5,91,
        0,0,299,86,1,0,0,0,300,301,5,93,0,0,301,88,1,0,0,0,302,303,5,123,
        0,0,303,90,1,0,0,0,304,305,5,125,0,0,305,92,1,0,0,0,306,307,5,59,
        0,0,307,94,1,0,0,0,308,309,5,58,0,0,309,96,1,0,0,0,310,311,5,67,
        0,0,311,98,1,0,0,0,312,313,5,108,0,0,313,314,5,101,0,0,314,315,5,
        116,0,0,315,100,1,0,0,0,316,317,5,116,0,0,317,318,5,104,0,0,318,
        319,5,105,0,0,319,320,5,115,0,0,320,102,1,0,0,0,321,322,5,115,0,
        0,322,323,5,117,0,0,323,324,5,112,0,0,324,325,5,101,0,0,325,326,
        5,114,0,0,326,104,1,0,0,0,327,328,5,112,0,0,328,329,5,117,0,0,329,
        330,5,98,0,0,330,331,5,108,0,0,331,332,5,105,0,0,332,333,5,99,0,
        0,333,106,1,0,0,0,334,335,5,112,0,0,335,336,5,114,0,0,336,337,5,
        105,0,0,337,338,5,118,0,0,338,339,5,97,0,0,339,340,5,116,0,0,340,
        341,5,101,0,0,341,108,1,0,0,0,342,343,5,112,0,0,343,344,5,114,0,
        0,344,345,5,111,0,0,345,346,5,116,0,0,346,347,5,101,0,0,347,348,
        5,99,0,0,348,349,5,116,0,0,349,350,5,101,0,0,350,351,5,100,0,0,351,
        110,1,0,0,0,352,353,5,102,0,0,353,354,5,117,0,0,354,355,5,110,0,
        0,355,356,5,99,0,0,356,357,5,116,0,0,357,358,5,105,0,0,358,359,5,
        111,0,0,359,360,5,110,0,0,360,112,1,0,0,0,361,362,5,97,0,0,362,363,
        5,112,0,0,363,364,5,105,0,0,364,114,1,0,0,0,365,366,5,99,0,0,366,
        367,5,108,0,0,367,368,5,97,0,0,368,369,5,115,0,0,369,370,5,115,0,
        0,370,116,1,0,0,0,371,372,5,115,0,0,372,373,5,116,0,0,373,374,5,
        114,0,0,374,375,5,117,0,0,375,376,5,99,0,0,376,377,5,116,0,0,377,
        118,1,0,0,0,378,379,5,101,0,0,379,380,5,120,0,0,380,381,5,116,0,
        0,381,382,5,101,0,0,382,383,5,110,0,0,383,384,5,100,0,0,384,385,
        5,115,0,0,385,120,1,0,0,0,386,387,5,105,0,0,387,388,5,102,0,0,388,
        122,1,0,0,0,389,390,5,101,0,0,390,391,5,108,0,0,391,392,5,105,0,
        0,392,393,5,102,0,0,393,124,1,0,0,0,394,395,5,101,0,0,395,396,5,
        108,0,0,396,397,5,115,0,0,397,398,5,101,0,0,398,126,1,0,0,0,399,
        400,5,99,0,0,400,401,5,111,0,0,401,402,5,110,0,0,402,403,5,116,0,
        0,403,404,5,105,0,0,404,405,5,110,0,0,405,406,5,117,0,0,406,407,
        5,101,0,0,407,128,1,0,0,0,408,409,5,98,0,0,409,410,5,114,0,0,410,
        411,5,101,0,0,411,412,5,97,0,0,412,413,5,107,0,0,413,130,1,0,0,0,
        414,415,5,114,0,0,415,416,5,101,0,0,416,417,5,116,0,0,417,418,5,
        117,0,0,418,419,5,114,0,0,419,420,5,110,0,0,420,132,1,0,0,0,421,
        422,5,45,0,0,422,423,5,62,0,0,423,134,1,0,0,0,424,425,5,117,0,0,
        425,426,5,115,0,0,426,427,5,101,0,0,427,136,1,0,0,0,428,429,5,97,
        0,0,429,430,5,115,0,0,430,138,1,0,0,0,431,432,5,102,0,0,432,433,
        5,111,0,0,433,434,5,114,0,0,434,140,1,0,0,0,435,436,5,119,0,0,436,
        437,5,104,0,0,437,438,5,105,0,0,438,439,5,108,0,0,439,440,5,101,
        0,0,440,142,1,0,0,0,441,442,5,105,0,0,442,443,5,109,0,0,443,444,
        5,112,0,0,444,445,5,111,0,0,445,446,5,114,0,0,446,447,5,116,0,0,
        447,144,1,0,0,0,448,449,5,105,0,0,449,450,5,110,0,0,450,451,5,99,
        0,0,451,452,5,108,0,0,452,453,5,117,0,0,453,454,5,100,0,0,454,455,
        5,101,0,0,455,146,1,0,0,0,456,460,3,3,1,0,457,460,3,1,0,0,458,460,
        5,95,0,0,459,456,1,0,0,0,459,457,1,0,0,0,459,458,1,0,0,0,460,465,
        1,0,0,0,461,464,3,7,3,0,462,464,5,95,0,0,463,461,1,0,0,0,463,462,
        1,0,0,0,464,467,1,0,0,0,465,463,1,0,0,0,465,466,1,0,0,0,466,148,
        1,0,0,0,467,465,1,0,0,0,468,469,7,4,0,0,469,470,1,0,0,0,470,471,
        6,74,0,0,471,150,1,0,0,0,472,474,5,13,0,0,473,472,1,0,0,0,473,474,
        1,0,0,0,474,475,1,0,0,0,475,478,5,10,0,0,476,478,5,13,0,0,477,473,
        1,0,0,0,477,476,1,0,0,0,478,479,1,0,0,0,479,477,1,0,0,0,479,480,
        1,0,0,0,480,152,1,0,0,0,14,0,162,170,181,192,199,204,210,459,463,
        465,473,477,479,1,6,0,0
    ]

class MoccalLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    SINGLECOMMENT = 1
    MULTICOMMENT = 2
    FLOAT = 3
    INT = 4
    STRING = 5
    EQ = 6
    LE = 7
    GE = 8
    NE = 9
    XOREQ = 10
    ANDEQ = 11
    OREQ = 12
    MULEQ = 13
    SUBEQ = 14
    ADDEQ = 15
    DIVEQ = 16
    MODEQ = 17
    COMMA = 18
    DOT = 19
    LOGAND = 20
    LOGOR = 21
    LOGNOT = 22
    NOT = 23
    MOD = 24
    XOR = 25
    AND = 26
    OR = 27
    SET = 28
    MUL = 29
    ADD = 30
    DIV = 31
    COPY = 32
    LT = 33
    GT = 34
    SUB = 35
    HASHTAG = 36
    LPAREN = 37
    RPAREN = 38
    LBRACK = 39
    RBRACK = 40
    LBRACE = 41
    RBRACE = 42
    SEMICOLON = 43
    COLON = 44
    C = 45
    LET = 46
    THIS = 47
    SUPER = 48
    PUBLIC = 49
    PRIVATE = 50
    PROTECTED = 51
    FUNCTION = 52
    API = 53
    CLASS = 54
    STRUCT = 55
    EXTENDS = 56
    IF = 57
    ELIF = 58
    ELSE = 59
    CONTINUE = 60
    BREAK = 61
    RETURN = 62
    ARROW = 63
    USE = 64
    AS = 65
    FOR = 66
    WHILE = 67
    IMPORT = 68
    INCLUDE = 69
    ID = 70
    WHITESPACE = 71
    NEWLINE = 72

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'=='", "'<='", "'>='", "'!='", "'^='", "'&='", "'|='", "'*='", 
            "'-='", "'+='", "'/='", "'%='", "','", "'.'", "'and'", "'or'", 
            "'not'", "'~'", "'%'", "'^'", "'&'", "'|'", "'='", "'*'", "'+'", 
            "'/'", "'!'", "'<'", "'>'", "'-'", "'#'", "'('", "')'", "'['", 
            "']'", "'{'", "'}'", "';'", "':'", "'C'", "'let'", "'this'", 
            "'super'", "'public'", "'private'", "'protected'", "'function'", 
            "'api'", "'class'", "'struct'", "'extends'", "'if'", "'elif'", 
            "'else'", "'continue'", "'break'", "'return'", "'->'", "'use'", 
            "'as'", "'for'", "'while'", "'import'", "'include'" ]

    symbolicNames = [ "<INVALID>",
            "SINGLECOMMENT", "MULTICOMMENT", "FLOAT", "INT", "STRING", "EQ", 
            "LE", "GE", "NE", "XOREQ", "ANDEQ", "OREQ", "MULEQ", "SUBEQ", 
            "ADDEQ", "DIVEQ", "MODEQ", "COMMA", "DOT", "LOGAND", "LOGOR", 
            "LOGNOT", "NOT", "MOD", "XOR", "AND", "OR", "SET", "MUL", "ADD", 
            "DIV", "COPY", "LT", "GT", "SUB", "HASHTAG", "LPAREN", "RPAREN", 
            "LBRACK", "RBRACK", "LBRACE", "RBRACE", "SEMICOLON", "COLON", 
            "C", "LET", "THIS", "SUPER", "PUBLIC", "PRIVATE", "PROTECTED", 
            "FUNCTION", "API", "CLASS", "STRUCT", "EXTENDS", "IF", "ELIF", 
            "ELSE", "CONTINUE", "BREAK", "RETURN", "ARROW", "USE", "AS", 
            "FOR", "WHILE", "IMPORT", "INCLUDE", "ID", "WHITESPACE", "NEWLINE" ]

    ruleNames = [ "UPPERCASE", "LOWERCASE", "DIGIT", "ALPHANUM", "SINGLECOMMENT", 
                  "MULTICOMMENT", "FLOAT", "INT", "STRING", "EQ", "LE", 
                  "GE", "NE", "XOREQ", "ANDEQ", "OREQ", "MULEQ", "SUBEQ", 
                  "ADDEQ", "DIVEQ", "MODEQ", "COMMA", "DOT", "LOGAND", "LOGOR", 
                  "LOGNOT", "NOT", "MOD", "XOR", "AND", "OR", "SET", "MUL", 
                  "ADD", "DIV", "COPY", "LT", "GT", "SUB", "HASHTAG", "LPAREN", 
                  "RPAREN", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "SEMICOLON", 
                  "COLON", "C", "LET", "THIS", "SUPER", "PUBLIC", "PRIVATE", 
                  "PROTECTED", "FUNCTION", "API", "CLASS", "STRUCT", "EXTENDS", 
                  "IF", "ELIF", "ELSE", "CONTINUE", "BREAK", "RETURN", "ARROW", 
                  "USE", "AS", "FOR", "WHILE", "IMPORT", "INCLUDE", "ID", 
                  "WHITESPACE", "NEWLINE" ]

    grammarFileName = "Moccal.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


